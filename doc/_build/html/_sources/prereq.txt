Prerequisites
=======================================


========================================
Prerequisites for Airport Monitor Tool
========================================
Installation Instruction for Airport Monitor.

Airport_Network_Monitor uses Munin (http://www.munin-monitoring.org/) tool generate graphs and monitor other parameneters related to Apple's Airport Express/Extreme or Time Capsule Devices.

The project basically consist of:
 | 1) Top Level SNMP wrapper for Airport Extreme (Airport_Monitor.py)
 | 2) Several Munin plugins (written in Python) to feed the data and other graph related configuration information to Munin Plugin.
   For example, **Airport_Wireless_Clients.py** is plugin script, used to feed data (and graph configuration) to Munin, for monitoring no. of clients connected to Airport Router. There are several Plugin Scripts in the Folder **Airport_Monitor**:
    | - Airport_Client_Error_Packets.py    - Airport_Client_Traffic.py  - Airport_Client_Signal_Strength.py
    | - Airport_Client_Noise.py            - Airport_DHCP_Clients.py    - Airport_Wireless_Clients.py
    | - Airport_Client_Rate.py             - Airport_WAN_Traffic.py  

All these scripts use Airport_Monitor.py to fetch SNMP data from the router, and supply this data to munin.
Munin automatically generates graph for these scripts, if they are placed in */etc/munin/plugins* folder.
Graphs generated by Munin can be shown by Local Web Server (Apache2 or lighthttpd).

Run everything as sudo

    | ``user_name$ sudo -s``
    | ``Password:``

--------------------------------------------
1) Install Munin on your Linux Machine:
--------------------------------------------

        | ``sudo apt-get install munin``
        | ``sudo apt-get install munin-node``

More Info: http://munin-monitoring.org/wiki/LinuxInstallation
Tutorial: http://waste.mandragor.org/munin_tutorial/munin.html#getting_started

--------------------------------------------
2) Install Apache Web Server:
--------------------------------------------

        | ``sudo apt-get install apache2``

More Info: https://help.ubuntu.com/8.04/serverguide/C/httpd.html

--------------------------------------------
3) Install Net-SNMP Python Bindings:
--------------------------------------------

        ``Already Installed on netman VM``

-------------------------------------------------
4) Move Python Plugins to Munin's Plugin Folder
-------------------------------------------------

Once we have installed Munin and Web-Server, copy all Plugin scripts and Top level SNMP wrapper (Airport_Monitor.py) to ``/etc/munin/plugins`` folder.**
    
        | ``cp Project_Folder/Airport_Monitor/*.py  /etc/munin/plugins/``
        | ``chown munin:munin /etc/munin/plugins/*``
                or
        | ``chmod 777 /etc/munin/plugins/*``

-------------------------------------------------
5) Now Restart munin-node and Apache2 Web Server
-------------------------------------------------
        
        | ``sudo service munin-node restart``
        | ``sudo /etc/init.d/apache2 restart``

-------------------------------------------------
6) Done!
-------------------------------------------------
You can check out Munin-generated graphs by typing: http://localhost on your web browser.
Graphs should be displayed under: **Airport_Monitor:Router Name** category.


=======================================
Prerequisites for Packet Sniffer Tool
=======================================
The following procedure is for installation on Ubuntu.

There are some packages required for the system to work.
You will need:

    * Python 2.5 or higher
    * libnet-dev
    * build-essential
    * python-dev
    * pylibnet 2.0
    * libpcap-dev
    * pycap 0.1.6

-------------------------------
INSTALL PROCEDURE
-------------------------------
Run everything as sudo

    | ``user_name$ sudo -s``
    | ``Password:``


^^^^^^^^^^^^^^^^^^
Install pylibnet
^^^^^^^^^^^^^^^^^^

| Pylibnet have some pre-requisites. 
| We need to have libnet1-dev,build-essential, python-dev installed.
| They can be installed with apt-get install(or equivalent)

    | ``bash# apt-get install libnet1-dev``
    | ``bash# apt-get install build-essential``
    | ``bash# apt-get install python-dev``

NOTE: It is possible that they may already be installed, in which case it may be upgraded(if out of date)

| Then go to : 
| http://pylibnet.sourceforge.net/
| and download the pylibnet2.0.tar.gz (source installation)

| Extract the tar.gz and cd to the extracted directory. Make sure you are superuser and the current directory have the setup.py in it.

Now Execute:
 
    | ``bash# python setup.py build``
    | ``bash# python setup.py install``

The installation should be error free on a good day.

CHECK:
Open python shell and import libnet.

    | ``bash# python``
    | ``Python 2.6 (r25:51918, Sep 19 2006, 08:49:13)`` 
    | ``Type "help", "copyright", "credits" or "license" for more information.``
    | ``>>> import libnet``
    | ``>>>``

If you do not see any error then we have successfully installed pylibnet


^^^^^^^^^^^^^^^^^^
Install pycap
^^^^^^^^^^^^^^^^^^
| pycap requires libpcap-dev in the system. We can get it by apt-get(or equivalent)

    | ``sudo apt-get install libpcap-dev``

NOTE: It is possible that they may already be installed, in which case it may be upgraded(if out of date)

| Then go to : 
| http://pycap.sourceforge.net/
| and download the pycap0.1.6.tar.gz (source installation)

| Extract the tar.gz and cd to the extracted directory. make sure you are superuser and the current directory have the setup.py in it.
| Now Execute:
 
    | ``bash# python setup.py build``
    | ``bash# python setup.py install``

The installation should be error free on a good day.

CHECK:
Open python shell and import pycap.

    | ``bash# python``
    | ``Python 2.6 (r25:51918, Sep 19 2006, 08:49:13)`` 
    | ``Type "help", "copyright", "credits" or "license" for more information.``
    | ``>>> import pycap``
    | ``>>>``

If you do not see any error then we have successfully installed pylibnet
